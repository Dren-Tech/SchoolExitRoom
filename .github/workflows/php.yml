name: PHP Composer

on: [push, pull_request]
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

jobs:
  build_php:
    runs-on: ubuntu-20.04
    container: drentech/caddy-php

    steps:
    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install Composer dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest
      
    - name: Save Composer dependencies as artifact
      uses: actions/upload-artifact@master
      with:
        name: composer-artifact
        path: vendor
      
  build_js:
    runs-on: ubuntu-20.04
    container: node:lts
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Cache Node packages
      id: node-cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install Node dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: yarn install
      
    - name: Build frontend
      run: yarn encore prod
      
    - name: Save frontend as artifact
      uses: actions/upload-artifact@master
      with:
        name: frontend-artifact
        path: |
          public/build
          public/bundles

  build_docker:
    needs: [build_php,build_js]
    runs-on: ubuntu-20.04
    container: drentech/caddy-php

    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/download-artifact@v2

    - name: Show files
      run: ls -lsa

    - name: Push to GitHub Packages
      uses: docker/build-push-action@v2.3.0
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        tags: drentech/schoolexitroom:latest
        tag_with_ref: true

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
